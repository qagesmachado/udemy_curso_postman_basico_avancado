{
	"info": {
		"_postman_id": "dd07ea30-839e-4f47-8f78-771f0bfc2cc9",
		"name": "SERVER_REST_CASOS_TESTE",
		"description": "SERVER_REST_CASOS_TESTE\n\nEsta collection é destinada a criação do projeto de teste do conjunto de APIs do site [ServeRest](https://serverest.dev/).\n\n## Importando Collection e Environment\n\n- Crie um workspace ou utilize um já existente\n    \n- Arraste e solte os arquivos dessa pasta para dentro do seu Postman desktop.\n    \n\n## Collections\n\n### USUÁRIO\n\n- CT 1 - SUCESSO - CRUD (ADMIN TRUE)\n    \n- CT 2 - SUCESSO - CRUD (ADMIN FALSE)\n    \n- CT 3 - FALHA - CRIAR USUARIO - USUARIOS IGUAIS\n    \n- CT 4 - FALHA - CRIAR USUARIO - JSON INCOMPLETO\n    \n- CT 5 - FALHA - ATUALIZAR USUARIO - EMAIL JA USADO\n    \n\n### LOGIN\n\n- CT 1 - SUCESSO - REALIZAR LOGIN - ADMIN TRUE\n    \n- CT 2 - SUCESSO - REALIZAR LOGIN - ADMIN FALSE\n    \n- CT 3 - FALHA - REALIZAR LOGIN - CREDENCIAIS INVALIDAS\n    \n- CT 4 - FALHA - REALIZAR LOGIN - JSON INCOMPLETO\n    \n\n### PRODUTO\n\n- CT 1 - SUCESSO - CRIA PRODUTO\n    \n- CT 2 - FALHA - CRIAR PRODUTO - PRODUTO REPETIDO\n    \n- CT 3 - FALHA - CRIAR PRODUTO - JSON INCOMPLETO\n    \n- CT 4 - FALHA - ATUALIZAR PRODUTO - NOME REPETIDO\n    \n- CT 5 - FALHA - CRIAR/ATUALIZAR PRODUTO - ADMIN FALSE\n    \n- CT 6 - FALHA - CRIAR/ATUALIZAR PRODUTO - SEM TOKEN\n    \n\n### CARRINHO\n\n- CT 1 - SUCESSO - CONCLUIR COMPRA\n    \n- CT 2 - SUCESS0 - CANCELAR COMPRA\n    \n- CT 3 - FALHA - CONCLUIR COMPRA - USUARIO SEM CARRINHO\n    \n- CT 4 - FALHA - CANCELAR COMPRA - USUARIO SEM CARRINHO\n    \n- CT 5 - FALHA - AUSENCIA DE TOKEN\n    \n- CT 6 - FALHA - DELETAR USUÁRIO/PRODUTO EM CARRINHO",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26881860"
	},
	"item": [
		{
			"name": "1_USUARIO",
			"item": [
				{
					"name": "CT 1 - SUCESSO - CRUD (ADMIN TRUE)",
					"item": [
						{
							"name": "1_CRIAR_USUARIO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Mensagem com sucesso\", ()=>{\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
											"})\r",
											"\r",
											"pm.test(\"Código é 201\", ()=>{\r",
											"    pm.response.to.have.status(201)\r",
											"})\r",
											"\r",
											"pm.test(\"ID não é nulo\", ()=>{\r",
											"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
											"    pm.environment.set(\"user_id\", jsonResponse._id);\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Limpando variável\r",
											"pm.environment.set(\"user_id\", \"\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}"
								},
								"url": {
									"raw": "{{BASE_URL}}/usuarios",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "2_LER_USUARIO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Valida dados do usuário\", function () {\r",
											"    pm.expect(jsonResponse.nome).to.eq(\"Eu QA Gustavo Machado\")\r",
											"    pm.expect(jsonResponse.email).to.eq(\"eu-qa@eu-qa.com.br\")\r",
											"    pm.expect(jsonResponse.password).to.eq(\"teste\")\r",
											"    pm.expect(jsonResponse.administrador).to.eq(\"true\")\r",
											"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"user_id\"))\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3_ATUALIZAR_USUARIO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Mensagem com sucesso\", ()=>{\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Registro alterado com sucesso\")\r",
											"})\r",
											"\r",
											"pm.test(\"Código é 200\", ()=>{\r",
											"    pm.response.to.have.status(200)\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado - TESTE\",\r\n  \"email\": \"eu-qa-teste@eu-qa.com.br\",\r\n  \"password\": \"teste2\",\r\n  \"administrador\": \"false\"\r\n}"
								},
								"url": {
									"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4_LER_USUARIO_ATUALIZADO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Valida dados do usuário\", function () {\r",
											"    pm.expect(jsonResponse.nome).to.eq(\"Eu QA Gustavo Machado - TESTE\")\r",
											"    pm.expect(jsonResponse.email).to.eq(\"eu-qa-teste@eu-qa.com.br\")\r",
											"    pm.expect(jsonResponse.password).to.eq(\"teste2\")\r",
											"    pm.expect(jsonResponse.administrador).to.eq(\"false\")\r",
											"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"user_id\"))\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5_DELETAR_USUARIO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 200\", ()=> {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", ()=> {\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "6_CONFIRMA_EXCLUSAO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 200\", ()=> {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", ()=> {\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Nenhum registro excluído\")\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "7_LER_USUARIO_NAO_EXISTE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Valida dados do usuário não existente\", function () {\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Usuário não encontrado\")\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios",
										"{{user_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CT 2 - SUCESSO - CRUD (ADMIN FALSE)",
					"item": [
						{
							"name": "1_CRIAR_USUARIO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Mensagem com sucesso\", ()=>{\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
											"})\r",
											"\r",
											"pm.test(\"Código é 201\", ()=>{\r",
											"    pm.response.to.have.status(201)\r",
											"})\r",
											"\r",
											"pm.test(\"ID não é nulo\", ()=>{\r",
											"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
											"    pm.environment.set(\"user_id\", jsonResponse._id);\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Limpando variável\r",
											"pm.environment.set(\"user_id\", \"\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"false\"\r\n}"
								},
								"url": {
									"raw": "{{BASE_URL}}/usuarios",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "2_LER_USUARIO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Valida dados do usuário\", function () {\r",
											"    pm.expect(jsonResponse.nome).to.eq(\"Eu QA Gustavo Machado\")\r",
											"    pm.expect(jsonResponse.email).to.eq(\"eu-qa@eu-qa.com.br\")\r",
											"    pm.expect(jsonResponse.password).to.eq(\"teste\")\r",
											"    pm.expect(jsonResponse.administrador).to.eq(\"false\")\r",
											"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"user_id\"))\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3_ATUALIZAR_USUARIO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Mensagem com sucesso\", ()=>{\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Registro alterado com sucesso\")\r",
											"})\r",
											"\r",
											"pm.test(\"Código é 200\", ()=>{\r",
											"    pm.response.to.have.status(200)\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado - TESTE\",\r\n  \"email\": \"eu-qa-teste@eu-qa.com.br\",\r\n  \"password\": \"teste2\",\r\n  \"administrador\": \"true\"\r\n}"
								},
								"url": {
									"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4_LER_USUARIO_ATUALIZADO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Valida dados do usuário\", function () {\r",
											"    pm.expect(jsonResponse.nome).to.eq(\"Eu QA Gustavo Machado - TESTE\")\r",
											"    pm.expect(jsonResponse.email).to.eq(\"eu-qa-teste@eu-qa.com.br\")\r",
											"    pm.expect(jsonResponse.password).to.eq(\"teste2\")\r",
											"    pm.expect(jsonResponse.administrador).to.eq(\"true\")\r",
											"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"user_id\"))\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5_DELETAR_USUARIO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 200\", ()=> {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", ()=> {\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "6_CONFIRMA_EXCLUSAO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 200\", ()=> {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", ()=> {\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Nenhum registro excluído\")\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "7_LER_USUARIO_NAO_EXISTE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Valida dados do usuário não existente\", function () {\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Usuário não encontrado\")\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios",
										"{{user_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CT 3 - FALHA - CRIAR USUARIO - USUARIOS IGUAIS",
					"item": [
						{
							"name": "1_CRIAR_USUARIO - Sucesso",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Mensagem com sucesso\", ()=>{\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
											"})\r",
											"\r",
											"pm.test(\"Código é 201\", ()=>{\r",
											"    pm.response.to.have.status(201)\r",
											"})\r",
											"\r",
											"pm.test(\"ID não é nulo\", ()=>{\r",
											"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
											"    pm.environment.set(\"user_id\", jsonResponse._id);\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Limpando variável\r",
											"pm.environment.set(\"user_id\", \"\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"false\"\r\n}"
								},
								"url": {
									"raw": "{{BASE_URL}}/usuarios",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "2_CRIAR_USUARIO - Falha",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Mensagem de falha\", ()=>{\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Este email já está sendo usado\")\r",
											"})\r",
											"\r",
											"pm.test(\"Código é 400\", ()=>{\r",
											"    pm.response.to.have.status(400)\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"false\"\r\n}"
								},
								"url": {
									"raw": "{{BASE_URL}}/usuarios",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "3_DELETAR_USUARIO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 200\", ()=> {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", ()=> {\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios",
										"{{user_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CT 4 - FALHA - CRIAR USUARIO - JSON INCOMPLETO",
					"item": [
						{
							"name": "1_CRIAR_USUARIO - Falha",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"JSON faltando validação\", ()=>{\r",
											"    pm.expect(jsonResponse.nome).to.eq(\"nome é obrigatório\")\r",
											"    pm.expect(jsonResponse.email).to.eq(\"email é obrigatório\")\r",
											"    pm.expect(jsonResponse.password).to.eq(\"password é obrigatório\")\r",
											"    pm.expect(jsonResponse.administrador).to.eq(\"administrador é obrigatório\")\r",
											"})\r",
											"\r",
											"pm.test(\"Código é 400\", ()=>{\r",
											"    pm.response.to.have.status(400)\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n}"
								},
								"url": {
									"raw": "{{BASE_URL}}/usuarios",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CT 5 - FALHA - ATUALIZAR USUARIO - EMAIL JA USADO",
					"item": [
						{
							"name": "1_CRIAR_USUARIO 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Mensagem com sucesso\", ()=>{\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
											"})\r",
											"\r",
											"pm.test(\"Código é 201\", ()=>{\r",
											"    pm.response.to.have.status(201)\r",
											"})\r",
											"\r",
											"pm.test(\"ID não é nulo\", ()=>{\r",
											"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
											"    pm.environment.set(\"user_id_1\", jsonResponse._id);\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Limpando variável\r",
											"pm.environment.set(\"user_id_1\", \"\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa-1@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}"
								},
								"url": {
									"raw": "{{BASE_URL}}/usuarios",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "2_CRIAR_USUARIO 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Mensagem com sucesso\", ()=>{\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
											"})\r",
											"\r",
											"pm.test(\"Código é 201\", ()=>{\r",
											"    pm.response.to.have.status(201)\r",
											"})\r",
											"\r",
											"pm.test(\"ID não é nulo\", ()=>{\r",
											"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
											"    pm.environment.set(\"user_id_2\", jsonResponse._id);\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Limpando variável\r",
											"pm.environment.set(\"user_id_2\", \"\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa-2@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}"
								},
								"url": {
									"raw": "{{BASE_URL}}/usuarios",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "3_ATUALIZAR_USUARIO_FALHA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Mensagem com sucesso\", ()=>{\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Este email já está sendo usado\")\r",
											"})\r",
											"\r",
											"pm.test(\"Código é 400\", ()=>{\r",
											"    pm.response.to.have.status(400)\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado - TESTE\",\r\n  \"email\": \"eu-qa-2@eu-qa.com.br\",\r\n  \"password\": \"teste2\",\r\n  \"administrador\": \"false\"\r\n}"
								},
								"url": {
									"raw": "{{BASE_URL}}/usuarios/{{user_id_1}}",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios",
										"{{user_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4_DELETAR_USUARIO 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 200\", ()=> {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", ()=> {\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/usuarios/{{user_id_1}}",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios",
										"{{user_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5_DELETAR_USUARIO 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 200\", ()=> {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", ()=> {\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/usuarios/{{user_id_2}}",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"usuarios",
										"{{user_id_2}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "2_LOGIN",
			"item": [
				{
					"name": "CT 1 - SUCESSO - REALIZAR LOGIN - ADMIN TRUE",
					"item": [
						{
							"name": "SETUP",
							"item": [
								{
									"name": "1_CRIAR_USUARIO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Mensagem com sucesso\", ()=>{\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"})\r",
													"\r",
													"pm.test(\"Código é 201\", ()=>{\r",
													"    pm.response.to.have.status(201)\r",
													"})\r",
													"\r",
													"pm.test(\"ID não é nulo\", ()=>{\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"    pm.environment.set(\"user_id\", jsonResponse._id);\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"pm.environment.set(\"user_id\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}"
										},
										"url": {
											"raw": "{{BASE_URL}}/usuarios",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEST",
							"item": [
								{
									"name": "2_LOGIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Login realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de token\", function () {\r",
													"    pm.expect(jsonResponse.authorization).to.not.eq(undefined)\r",
													"    pm.environment.set(\"auth_token\", jsonResponse.authorization);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"    pm.environment.set(\"auth_token\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/login",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEARDOWN",
							"item": [
								{
									"name": "3_DELETAR_USUARIO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", ()=> {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem correta\", ()=> {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios",
												"{{user_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "CT 2 - SUCESSO - REALIZAR LOGIN - ADMIN FALSE",
					"item": [
						{
							"name": "SETUP",
							"item": [
								{
									"name": "1_CRIAR_USUARIO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Mensagem com sucesso\", ()=>{\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"})\r",
													"\r",
													"pm.test(\"Código é 201\", ()=>{\r",
													"    pm.response.to.have.status(201)\r",
													"})\r",
													"\r",
													"pm.test(\"ID não é nulo\", ()=>{\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"    pm.environment.set(\"user_id\", jsonResponse._id);\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"pm.environment.set(\"user_id\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"false\"\r\n}"
										},
										"url": {
											"raw": "{{BASE_URL}}/usuarios",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEST",
							"item": [
								{
									"name": "2_LOGIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Login realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de token\", function () {\r",
													"    pm.expect(jsonResponse.authorization).to.not.eq(undefined)\r",
													"    pm.environment.set(\"auth_token\", jsonResponse.authorization);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"    pm.environment.set(\"auth_token\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/login",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEARDOWN",
							"item": [
								{
									"name": "3_DELETAR_USUARIO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", ()=> {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem correta\", ()=> {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios",
												"{{user_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "CT 3 - FALHA - REALIZAR LOGIN  - CREDENCIAIS INVALIDAS",
					"item": [
						{
							"name": "1_LOGIN_INVALIDO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Validação de mensagem\", function () {\r",
											"    pm.expect(jsonResponse.message).to.eq(\"Email e/ou senha inválidos\")\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"non-exist@non-exist.com.br\",\r\n  \"password\": \"non\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/login",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CT 4 - FALHA - REALIZAR LOGIN  - JSON INCOMPLETO",
					"item": [
						{
							"name": "1_LOGIN_SEM_JSON",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonResponse = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Validação de mensagem\", function () {\r",
											"    pm.expect(jsonResponse.email).to.eq(\"email é obrigatório\")\r",
											"    pm.expect(jsonResponse.password).to.eq(\"password é obrigatório\")\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/login",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "3_PRODUTO",
			"item": [
				{
					"name": "CT 1 - SUCESSO - CRIA PRODUTO",
					"item": [
						{
							"name": "SETUP",
							"item": [
								{
									"name": "1_CRIAR_USUARIO_ADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Mensagem com sucesso\", ()=>{\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"})\r",
													"\r",
													"pm.test(\"Código é 201\", ()=>{\r",
													"    pm.response.to.have.status(201)\r",
													"})\r",
													"\r",
													"pm.test(\"ID não é nulo\", ()=>{\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"    pm.environment.set(\"user_id\", jsonResponse._id);\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"pm.environment.set(\"user_id\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}"
										},
										"url": {
											"raw": "{{BASE_URL}}/usuarios",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "2_LOGIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Login realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de token\", function () {\r",
													"    pm.expect(jsonResponse.authorization).to.not.eq(undefined)\r",
													"    pm.environment.set(\"auth_token\", jsonResponse.authorization);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"    pm.environment.set(\"auth_token\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/login",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEST",
							"item": [
								{
									"name": "3_CRIAR_PRODUTO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação ID produto\", function () {\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"\r",
													"    pm.environment.set(\"produto_id\", jsonResponse._id);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"produto_id\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 1\",\r\n  \"preco\": 100,\r\n  \"descricao\": \"Produto 1 descrição\",\r\n  \"quantidade\": 2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								},
								{
									"name": "4_LEITURA_PRODUTO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"Produto 1\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(100)\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"Produto 1 descrição\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(2)\r",
													"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"produto_id\"))\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "5_ATUALIZAR_PRODUTO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro alterado com sucesso\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 1.1\",\r\n  \"preco\": 1000,\r\n  \"descricao\": \"Produto 1.1 descrição\",\r\n  \"quantidade\": 20\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "6_LEITURA_PRODUTO_ATUALIZADO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"Produto 1.1\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(1000)\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"Produto 1.1 descrição\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(20)\r",
													"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"produto_id\"))\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "7_DELETAR_PRODUTO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "8_DELETAR_PRODUTO_CONFIRMACAO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Nenhum registro excluído\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "9_LEITURA_PRODUTO_EXCLUIDO_CONFIRMACAO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Produto não encontrado\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEARDOWN",
							"item": [
								{
									"name": "10_DELETAR_USUARIO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", ()=> {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem correta\", ()=> {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios",
												"{{user_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "CT 2 - FALHA - CRIAR PRODUTO - PRODUTO REPETIDO",
					"item": [
						{
							"name": "SETUP",
							"item": [
								{
									"name": "1_CRIAR_USUARIO_ADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Mensagem com sucesso\", ()=>{\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"})\r",
													"\r",
													"pm.test(\"Código é 201\", ()=>{\r",
													"    pm.response.to.have.status(201)\r",
													"})\r",
													"\r",
													"pm.test(\"ID não é nulo\", ()=>{\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"    pm.environment.set(\"user_id\", jsonResponse._id);\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"pm.environment.set(\"user_id\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}"
										},
										"url": {
											"raw": "{{BASE_URL}}/usuarios",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "2_LOGIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Login realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de token\", function () {\r",
													"    pm.expect(jsonResponse.authorization).to.not.eq(undefined)\r",
													"    pm.environment.set(\"auth_token\", jsonResponse.authorization);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"    pm.environment.set(\"auth_token\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/login",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEST",
							"item": [
								{
									"name": "3_CRIAR_PRODUTO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação ID produto\", function () {\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"\r",
													"    pm.environment.set(\"produto_id\", jsonResponse._id);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"produto_id\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 1\",\r\n  \"preco\": 100,\r\n  \"descricao\": \"Produto 1 descrição\",\r\n  \"quantidade\": 2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								},
								{
									"name": "4_CRIAR_PRODUTO_REPETIDO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Já existe produto com esse nome\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 1\",\r\n  \"preco\": 100,\r\n  \"descricao\": \"Produto 1 descrição\",\r\n  \"quantidade\": 2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								},
								{
									"name": "5_DELETAR_PRODUTO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEARDOWN",
							"item": [
								{
									"name": "10_DELETAR_USUARIO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", ()=> {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem correta\", ()=> {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios",
												"{{user_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "CT 3 - FALHA - CRIAR PRODUTO - JSON INCOMPLETO",
					"item": [
						{
							"name": "SETUP",
							"item": [
								{
									"name": "1_CRIAR_USUARIO_ADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Mensagem com sucesso\", ()=>{\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"})\r",
													"\r",
													"pm.test(\"Código é 201\", ()=>{\r",
													"    pm.response.to.have.status(201)\r",
													"})\r",
													"\r",
													"pm.test(\"ID não é nulo\", ()=>{\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"    pm.environment.set(\"user_id\", jsonResponse._id);\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"pm.environment.set(\"user_id\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}"
										},
										"url": {
											"raw": "{{BASE_URL}}/usuarios",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "2_LOGIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Login realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de token\", function () {\r",
													"    pm.expect(jsonResponse.authorization).to.not.eq(undefined)\r",
													"    pm.environment.set(\"auth_token\", jsonResponse.authorization);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"    pm.environment.set(\"auth_token\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/login",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEST",
							"item": [
								{
									"name": "3_CRIAR_PRODUTO_JSON_INCOMPLETO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de erro\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"nome é obrigatório\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(\"preco é obrigatório\")\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"descricao é obrigatório\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(\"quantidade é obrigatório\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEARDOWN",
							"item": [
								{
									"name": "10_DELETAR_USUARIO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", ()=> {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem correta\", ()=> {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios",
												"{{user_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "CT 4 - FALHA - ATUALIZAR PRODUTO - NOME REPETIDO",
					"item": [
						{
							"name": "SETUP",
							"item": [
								{
									"name": "1_CRIAR_USUARIO_ADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Mensagem com sucesso\", ()=>{\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"})\r",
													"\r",
													"pm.test(\"Código é 201\", ()=>{\r",
													"    pm.response.to.have.status(201)\r",
													"})\r",
													"\r",
													"pm.test(\"ID não é nulo\", ()=>{\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"    pm.environment.set(\"user_id\", jsonResponse._id);\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"pm.environment.set(\"user_id\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}"
										},
										"url": {
											"raw": "{{BASE_URL}}/usuarios",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "2_LOGIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Login realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de token\", function () {\r",
													"    pm.expect(jsonResponse.authorization).to.not.eq(undefined)\r",
													"    pm.environment.set(\"auth_token\", jsonResponse.authorization);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"    pm.environment.set(\"auth_token\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/login",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEST",
							"item": [
								{
									"name": "3_CRIAR_PRODUTO 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação ID produto\", function () {\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"\r",
													"    pm.environment.set(\"produto_id_1\", jsonResponse._id);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"produto_id_1\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 1\",\r\n  \"preco\": 100,\r\n  \"descricao\": \"Produto 1 descrição\",\r\n  \"quantidade\": 2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								},
								{
									"name": "4_CRIAR_PRODUTO 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação ID produto\", function () {\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"\r",
													"    pm.environment.set(\"produto_id_2\", jsonResponse._id);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"produto_id_2\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 2\",\r\n  \"preco\": 100,\r\n  \"descricao\": \"Produto 2 descrição\",\r\n  \"quantidade\": 2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								},
								{
									"name": "5_ATUALIZAR_PRODUTO_1_COM_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Já existe produto com esse nome\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 2\",\r\n  \"preco\": 1000,\r\n  \"descricao\": \"Produto 1.1 descrição\",\r\n  \"quantidade\": 20\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_1}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "7_DELETAR_PRODUTO_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_1}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "7_DELETAR_PRODUTO_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_2}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_2}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEARDOWN",
							"item": [
								{
									"name": "10_DELETAR_USUARIO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", ()=> {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem correta\", ()=> {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios",
												"{{user_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "CT 5 - FALHA - CRIAR/ATUALIZAR PRODUTO - ADMIN FALSE",
					"item": [
						{
							"name": "SETUP",
							"item": [
								{
									"name": "1_CRIAR_USUARIO_ADMIN_TRUE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Mensagem com sucesso\", ()=>{\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"})\r",
													"\r",
													"pm.test(\"Código é 201\", ()=>{\r",
													"    pm.response.to.have.status(201)\r",
													"})\r",
													"\r",
													"pm.test(\"ID não é nulo\", ()=>{\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"    pm.environment.set(\"user_id_admin\", jsonResponse._id);\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"pm.environment.set(\"user_id_admin\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}"
										},
										"url": {
											"raw": "{{BASE_URL}}/usuarios",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "2_CRIAR_USUARIO_ADMIN_FALSE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Mensagem com sucesso\", ()=>{\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"})\r",
													"\r",
													"pm.test(\"Código é 201\", ()=>{\r",
													"    pm.response.to.have.status(201)\r",
													"})\r",
													"\r",
													"pm.test(\"ID não é nulo\", ()=>{\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"    pm.environment.set(\"user_id_no_admin\", jsonResponse._id);\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"pm.environment.set(\"user_id_no_admin\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa-no-admin@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"false\"\r\n}"
										},
										"url": {
											"raw": "{{BASE_URL}}/usuarios",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "3_LOGIN_ADMIN_TRUE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Login realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de token\", function () {\r",
													"    pm.expect(jsonResponse.authorization).to.not.eq(undefined)\r",
													"    pm.environment.set(\"auth_token_admin\", jsonResponse.authorization);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"    pm.environment.set(\"auth_token_admin\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/login",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "4_LOGIN_ADMIN_FALSE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Login realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de token\", function () {\r",
													"    pm.expect(jsonResponse.authorization).to.not.eq(undefined)\r",
													"    pm.environment.set(\"auth_token_no_admin\", jsonResponse.authorization);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"    pm.environment.set(\"auth_token_no_admin\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"eu-qa-no-admin@eu-qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/login",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEST",
							"item": [
								{
									"name": "5_CRIAR_PRODUTO_ADMIN_FALSE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Rota exclusiva para administradores\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token_no_admin}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 1\",\r\n  \"preco\": 100,\r\n  \"descricao\": \"Produto 1 descrição\",\r\n  \"quantidade\": 2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								},
								{
									"name": "6_CRIAR_PRODUTO_ADMIN_TRUE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação ID produto\", function () {\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"\r",
													"    pm.environment.set(\"produto_id\", jsonResponse._id);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"produto_id\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token_admin}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 1\",\r\n  \"preco\": 100,\r\n  \"descricao\": \"Produto 1 descrição\",\r\n  \"quantidade\": 2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								},
								{
									"name": "7_LEITURA_PRODUTO_ADMIN_TRUE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"Produto 1\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(100)\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"Produto 1 descrição\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(2)\r",
													"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"produto_id\"))\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token_admin}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "8_LEITURA_PRODUTO_ADMIN_FALSE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"Produto 1\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(100)\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"Produto 1 descrição\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(2)\r",
													"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"produto_id\"))\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token_no_admin}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "9_ATUALIZAR_PRODUTO_ADMIN_FALSE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Rota exclusiva para administradores\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token_no_admin}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 1.1\",\r\n  \"preco\": 1000,\r\n  \"descricao\": \"Produto 1.1 descrição\",\r\n  \"quantidade\": 20\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "10_ATUALIZAR_PRODUTO_ADMIN_TRUE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro alterado com sucesso\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 1.1\",\r\n  \"preco\": 1000,\r\n  \"descricao\": \"Produto 1.1 descrição\",\r\n  \"quantidade\": 20\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "11_DELETAR_PRODUTO_ADMIN_FALSE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Rota exclusiva para administradores\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token_no_admin}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "12_DELETAR_PRODUTO_ADMIN_TRUE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token_admin}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEARDOWN",
							"item": [
								{
									"name": "13_DELETAR_USUARIO_ADMIN_TRUE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", ()=> {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem correta\", ()=> {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/usuarios/{{user_id_admin}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios",
												"{{user_id_admin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "14_DELETAR_USUARIO_ADMIN_FALSE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", ()=> {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem correta\", ()=> {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/usuarios/{{user_id_no_admin}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios",
												"{{user_id_no_admin}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "CT 6 - FALHA - CRIAR/ATUALIZAR PRODUTO - SEM TOKEN",
					"item": [
						{
							"name": "SETUP",
							"item": [
								{
									"name": "1_CRIAR_USUARIO_ADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Mensagem com sucesso\", ()=>{\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"})\r",
													"\r",
													"pm.test(\"Código é 201\", ()=>{\r",
													"    pm.response.to.have.status(201)\r",
													"})\r",
													"\r",
													"pm.test(\"ID não é nulo\", ()=>{\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"    pm.environment.set(\"user_id\", jsonResponse._id);\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"pm.environment.set(\"user_id\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}"
										},
										"url": {
											"raw": "{{BASE_URL}}/usuarios",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "2_LOGIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Login realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de token\", function () {\r",
													"    pm.expect(jsonResponse.authorization).to.not.eq(undefined)\r",
													"    pm.environment.set(\"auth_token\", jsonResponse.authorization);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"    pm.environment.set(\"auth_token\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/login",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEST",
							"item": [
								{
									"name": "3_CRIAR_PRODUTO_SEM_TOKEN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 1\",\r\n  \"preco\": 100,\r\n  \"descricao\": \"Produto 1 descrição\",\r\n  \"quantidade\": 2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								},
								{
									"name": "4_CRIAR_PRODUTO_ADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação ID produto\", function () {\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"\r",
													"    pm.environment.set(\"produto_id\", jsonResponse._id);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"produto_id\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 1\",\r\n  \"preco\": 100,\r\n  \"descricao\": \"Produto 1 descrição\",\r\n  \"quantidade\": 2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								},
								{
									"name": "5_ATUALIZAR_PRODUTO_SEM_TOKEN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 1.1\",\r\n  \"preco\": 1000,\r\n  \"descricao\": \"Produto 1.1 descrição\",\r\n  \"quantidade\": 20\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "6_DELETAR_PRODUTO_ADMIN_SEM_TOKEN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "7_DELETAR_PRODUTO_ADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEARDOWN",
							"item": [
								{
									"name": "8_DELETAR_USUARIO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", ()=> {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem correta\", ()=> {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios",
												"{{user_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "4_CARRINHO",
			"item": [
				{
					"name": "CT 1 - SUCESSO - CONCLUIR COMPRA",
					"item": [
						{
							"name": "SETUP",
							"item": [
								{
									"name": "1_CRIAR_USUARIO_ADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Mensagem com sucesso\", ()=>{\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"})\r",
													"\r",
													"pm.test(\"Código é 201\", ()=>{\r",
													"    pm.response.to.have.status(201)\r",
													"})\r",
													"\r",
													"pm.test(\"ID não é nulo\", ()=>{\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"    pm.environment.set(\"user_id\", jsonResponse._id);\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"pm.environment.set(\"user_id\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}"
										},
										"url": {
											"raw": "{{BASE_URL}}/usuarios",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "2_LOGIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Login realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de token\", function () {\r",
													"    pm.expect(jsonResponse.authorization).to.not.eq(undefined)\r",
													"    pm.environment.set(\"auth_token\", jsonResponse.authorization);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"    pm.environment.set(\"auth_token\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/login",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "3_CRIAR_PRODUTO_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação ID produto\", function () {\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"\r",
													"    pm.environment.set(\"produto_id_1\", jsonResponse._id);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"produto_id_1\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 1\",\r\n  \"preco\": 100,\r\n  \"descricao\": \"Produto 1 descrição\",\r\n  \"quantidade\": 2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								},
								{
									"name": "4_CRIAR_PRODUTO_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação ID produto\", function () {\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"\r",
													"    pm.environment.set(\"produto_id_2\", jsonResponse._id);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"produto_id_2\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 2\",\r\n  \"preco\": 200,\r\n  \"descricao\": \"Produto 2 descrição\",\r\n  \"quantidade\": 5\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEST",
							"item": [
								{
									"name": "5_CRIAR_CARRINHO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação token\", function () {\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"\r",
													"    pm.environment.set(\"carrinho_id\", jsonResponse._id);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"carrinho_id\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{produto_id_1}}\",\r\n      \"quantidade\": 1\r\n    },\r\n    {\r\n      \"idProduto\": \"{{produto_id_2}}\",\r\n      \"quantidade\": 3\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/carrinhos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": []
								},
								{
									"name": "6_LER_CARRINHO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação PREÇO e QUANTIDADE\", function () {\r",
													"    var preco_1 = jsonResponse.produtos[0].precoUnitario\r",
													"    var qtd_1 = jsonResponse.produtos[0].quantidade\r",
													"    var preco_2 = jsonResponse.produtos[1].precoUnitario\r",
													"    var qtd_2 = jsonResponse.produtos[1].quantidade\r",
													"\r",
													"    pm.expect(preco_1).to.eq(100)\r",
													"    pm.expect(qtd_1).to.eq(1)\r",
													"    pm.expect(preco_2).to.eq(200)\r",
													"    pm.expect(qtd_2).to.eq(3)\r",
													"\r",
													"    var total_calculado = (preco_1*qtd_1) + (preco_2*qtd_2)\r",
													"    var total_qtd = qtd_1 + qtd_2\r",
													"\r",
													"    pm.expect(total_calculado).to.eq(jsonResponse.precoTotal)\r",
													"    pm.expect(total_qtd).to.eq(jsonResponse.quantidadeTotal)\r",
													"\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://serverest.dev/carrinhos/{{carrinho_id}}",
											"protocol": "https",
											"host": [
												"serverest",
												"dev"
											],
											"path": [
												"carrinhos",
												"{{carrinho_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "7_LEITURA_PRODUTO_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"Produto 1\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(100)\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"Produto 1 descrição\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(1)\r",
													"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"produto_id_1\"))\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_1}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "8_LEITURA_PRODUTO_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"Produto 2\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(200)\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"Produto 2 descrição\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(2)\r",
													"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"produto_id_2\"))\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_2}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_2}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "9_DELETAR_CARRINHO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validaçào mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{auth_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://serverest.dev/carrinhos/concluir-compra",
											"protocol": "https",
											"host": [
												"serverest",
												"dev"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"response": []
								},
								{
									"name": "10_LEITURA_PRODUTO_1_POS_COMPRA",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"Produto 1\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(100)\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"Produto 1 descrição\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(1)\r",
													"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"produto_id_1\"))\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_1}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "11_LEITURA_PRODUTO_2_POS_COMPRA",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"Produto 2\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(200)\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"Produto 2 descrição\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(2)\r",
													"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"produto_id_2\"))\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_2}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_2}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "12_LER_CARRINHO_POS_COMPRA",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://serverest.dev/carrinhos/{{carrinho_id}}",
											"protocol": "https",
											"host": [
												"serverest",
												"dev"
											],
											"path": [
												"carrinhos",
												"{{carrinho_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEARDOWN",
							"item": [
								{
									"name": "12_DELETAR_PRODUTO_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_1}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "13_DELETAR_PRODUTO_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_2}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_2}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "14_DELETAR_USUARIO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", ()=> {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem correta\", ()=> {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios",
												"{{user_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "CT 2 - SUCESS0 - CANCELAR COMPRA",
					"item": [
						{
							"name": "SETUP",
							"item": [
								{
									"name": "1_CRIAR_USUARIO_ADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Mensagem com sucesso\", ()=>{\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"})\r",
													"\r",
													"pm.test(\"Código é 201\", ()=>{\r",
													"    pm.response.to.have.status(201)\r",
													"})\r",
													"\r",
													"pm.test(\"ID não é nulo\", ()=>{\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"    pm.environment.set(\"user_id\", jsonResponse._id);\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"pm.environment.set(\"user_id\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}"
										},
										"url": {
											"raw": "{{BASE_URL}}/usuarios",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "2_LOGIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Login realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de token\", function () {\r",
													"    pm.expect(jsonResponse.authorization).to.not.eq(undefined)\r",
													"    pm.environment.set(\"auth_token\", jsonResponse.authorization);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"    pm.environment.set(\"auth_token\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/login",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "3_CRIAR_PRODUTO_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação ID produto\", function () {\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"\r",
													"    pm.environment.set(\"produto_id_1\", jsonResponse._id);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"produto_id_1\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 1\",\r\n  \"preco\": 100,\r\n  \"descricao\": \"Produto 1 descrição\",\r\n  \"quantidade\": 2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								},
								{
									"name": "4_CRIAR_PRODUTO_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação ID produto\", function () {\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"\r",
													"    pm.environment.set(\"produto_id_2\", jsonResponse._id);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"produto_id_2\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 2\",\r\n  \"preco\": 200,\r\n  \"descricao\": \"Produto 2 descrição\",\r\n  \"quantidade\": 5\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEST",
							"item": [
								{
									"name": "5_CRIAR_CARRINHO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação token\", function () {\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"\r",
													"    pm.environment.set(\"carrinho_id\", jsonResponse._id);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"carrinho_id\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{produto_id_1}}\",\r\n      \"quantidade\": 1\r\n    },\r\n    {\r\n      \"idProduto\": \"{{produto_id_2}}\",\r\n      \"quantidade\": 3\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/carrinhos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": []
								},
								{
									"name": "6_LER_CARRINHO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação PREÇO e QUANTIDADE\", function () {\r",
													"    var preco_1 = jsonResponse.produtos[0].precoUnitario\r",
													"    var qtd_1 = jsonResponse.produtos[0].quantidade\r",
													"    var preco_2 = jsonResponse.produtos[1].precoUnitario\r",
													"    var qtd_2 = jsonResponse.produtos[1].quantidade\r",
													"\r",
													"    pm.expect(preco_1).to.eq(100)\r",
													"    pm.expect(qtd_1).to.eq(1)\r",
													"    pm.expect(preco_2).to.eq(200)\r",
													"    pm.expect(qtd_2).to.eq(3)\r",
													"\r",
													"    var total_calculado = (preco_1*qtd_1) + (preco_2*qtd_2)\r",
													"    var total_qtd = qtd_1 + qtd_2\r",
													"\r",
													"    pm.expect(total_calculado).to.eq(jsonResponse.precoTotal)\r",
													"    pm.expect(total_qtd).to.eq(jsonResponse.quantidadeTotal)\r",
													"\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://serverest.dev/carrinhos/{{carrinho_id}}",
											"protocol": "https",
											"host": [
												"serverest",
												"dev"
											],
											"path": [
												"carrinhos",
												"{{carrinho_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "7_LEITURA_PRODUTO_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"Produto 1\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(100)\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"Produto 1 descrição\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(1)\r",
													"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"produto_id_1\"))\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_1}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "8_LEITURA_PRODUTO_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"Produto 2\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(200)\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"Produto 2 descrição\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(2)\r",
													"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"produto_id_2\"))\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_2}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_2}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "9_DELETAR_CARRINHO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso. Estoque dos produtos reabastecido\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{auth_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://serverest.dev/carrinhos/cancelar-compra",
											"protocol": "https",
											"host": [
												"serverest",
												"dev"
											],
											"path": [
												"carrinhos",
												"cancelar-compra"
											]
										}
									},
									"response": []
								},
								{
									"name": "10_LEITURA_PRODUTO_1_POS_COMPRA",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"Produto 1\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(100)\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"Produto 1 descrição\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(2)\r",
													"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"produto_id_1\"))\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_1}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "11_LEITURA_PRODUTO_2_POS_COMPRA",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"Produto 2\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(200)\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"Produto 2 descrição\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(5)\r",
													"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"produto_id_2\"))\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_2}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_2}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEARDOWN",
							"item": [
								{
									"name": "12_DELETAR_PRODUTO_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_1}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "13_DELETAR_PRODUTO_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_2}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_2}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "14_DELETAR_USUARIO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", ()=> {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem correta\", ()=> {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios",
												"{{user_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "CT 3 - FALHA - CONCLUIR COMPRA - USUARIO SEM CARRINHO",
					"item": [
						{
							"name": "SETUP",
							"item": [
								{
									"name": "1_CRIAR_USUARIO_ADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Mensagem com sucesso\", ()=>{\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"})\r",
													"\r",
													"pm.test(\"Código é 201\", ()=>{\r",
													"    pm.response.to.have.status(201)\r",
													"})\r",
													"\r",
													"pm.test(\"ID não é nulo\", ()=>{\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"    pm.environment.set(\"user_id\", jsonResponse._id);\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"pm.environment.set(\"user_id\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}"
										},
										"url": {
											"raw": "{{BASE_URL}}/usuarios",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "2_LOGIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Login realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de token\", function () {\r",
													"    pm.expect(jsonResponse.authorization).to.not.eq(undefined)\r",
													"    pm.environment.set(\"auth_token\", jsonResponse.authorization);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"    pm.environment.set(\"auth_token\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/login",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEST",
							"item": [
								{
									"name": "3_DELETAR_CARRINHO_NAO_EXISTENTE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Não foi encontrado carrinho para esse usuário\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{auth_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://serverest.dev/carrinhos/concluir-compra",
											"protocol": "https",
											"host": [
												"serverest",
												"dev"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEARDOWN",
							"item": [
								{
									"name": "4_DELETAR_USUARIO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", ()=> {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem correta\", ()=> {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios",
												"{{user_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "CT 4 - FALHA - CANCELAR COMPRA - USUARIO SEM CARRINHO",
					"item": [
						{
							"name": "SETUP",
							"item": [
								{
									"name": "1_CRIAR_USUARIO_ADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Mensagem com sucesso\", ()=>{\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"})\r",
													"\r",
													"pm.test(\"Código é 201\", ()=>{\r",
													"    pm.response.to.have.status(201)\r",
													"})\r",
													"\r",
													"pm.test(\"ID não é nulo\", ()=>{\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"    pm.environment.set(\"user_id\", jsonResponse._id);\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"pm.environment.set(\"user_id\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}"
										},
										"url": {
											"raw": "{{BASE_URL}}/usuarios",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "2_LOGIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Login realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de token\", function () {\r",
													"    pm.expect(jsonResponse.authorization).to.not.eq(undefined)\r",
													"    pm.environment.set(\"auth_token\", jsonResponse.authorization);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"    pm.environment.set(\"auth_token\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/login",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEST",
							"item": [
								{
									"name": "3_DELETAR_CARRINHO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Não foi encontrado carrinho para esse usuário\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{auth_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://serverest.dev/carrinhos/cancelar-compra",
											"protocol": "https",
											"host": [
												"serverest",
												"dev"
											],
											"path": [
												"carrinhos",
												"cancelar-compra"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEARDOWN",
							"item": [
								{
									"name": "4_DELETAR_USUARIO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", ()=> {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem correta\", ()=> {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios",
												"{{user_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "CT 5 - FALHA - AUSENCIA DE TOKEN",
					"item": [
						{
							"name": "TEST",
							"item": [
								{
									"name": "1_CRIAR_CARRINHO_SEM_TOKEN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{produto_id_1}}\",\r\n      \"quantidade\": 1\r\n    },\r\n    {\r\n      \"idProduto\": \"{{produto_id_2}}\",\r\n      \"quantidade\": 3\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/carrinhos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": []
								},
								{
									"name": "2_DELETAR_CARRINHO_SEM_TOKEN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://serverest.dev/carrinhos/concluir-compra",
											"protocol": "https",
											"host": [
												"serverest",
												"dev"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"response": []
								},
								{
									"name": "3_CANCELAR_CARRINHO_SEM_TOKEN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{auth_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://serverest.dev/carrinhos/concluir-compra",
											"protocol": "https",
											"host": [
												"serverest",
												"dev"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "CT 6 - FALHA - DELETAR USUÁRIO/PRODUTO EM CARRINHO",
					"item": [
						{
							"name": "SETUP",
							"item": [
								{
									"name": "1_CRIAR_USUARIO_ADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Mensagem com sucesso\", ()=>{\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"})\r",
													"\r",
													"pm.test(\"Código é 201\", ()=>{\r",
													"    pm.response.to.have.status(201)\r",
													"})\r",
													"\r",
													"pm.test(\"ID não é nulo\", ()=>{\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"    pm.environment.set(\"user_id\", jsonResponse._id);\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"pm.environment.set(\"user_id\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Eu QA Gustavo Machado\",\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}"
										},
										"url": {
											"raw": "{{BASE_URL}}/usuarios",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "2_LOGIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Login realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação de token\", function () {\r",
													"    pm.expect(jsonResponse.authorization).to.not.eq(undefined)\r",
													"    pm.environment.set(\"auth_token\", jsonResponse.authorization);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Limpando variável\r",
													"    pm.environment.set(\"auth_token\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"eu-qa@eu-qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/login",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "3_CRIAR_PRODUTO_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação ID produto\", function () {\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"\r",
													"    pm.environment.set(\"produto_id_1\", jsonResponse._id);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"produto_id_1\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 1\",\r\n  \"preco\": 100,\r\n  \"descricao\": \"Produto 1 descrição\",\r\n  \"quantidade\": 2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								},
								{
									"name": "4_CRIAR_PRODUTO_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação ID produto\", function () {\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"\r",
													"    pm.environment.set(\"produto_id_2\", jsonResponse._id);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"produto_id_2\", \"\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Produto 2\",\r\n  \"preco\": 200,\r\n  \"descricao\": \"Produto 2 descrição\",\r\n  \"quantidade\": 5\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEST",
							"item": [
								{
									"name": "5_CRIAR_CARRINHO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Cadastro realizado com sucesso\")\r",
													"});\r",
													"\r",
													"pm.test(\"Validação token\", function () {\r",
													"    pm.expect(jsonResponse._id).to.not.eq(undefined)\r",
													"\r",
													"    pm.environment.set(\"carrinho_id\", jsonResponse._id);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"carrinho_id\", \"\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{produto_id_1}}\",\r\n      \"quantidade\": 1\r\n    },\r\n    {\r\n      \"idProduto\": \"{{produto_id_2}}\",\r\n      \"quantidade\": 3\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/carrinhos",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": []
								},
								{
									"name": "6_DELETAR_PRODUTO_1_COM_CARRINHO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Não é permitido excluir produto que faz parte de carrinho\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_1}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "7_DELETAR_PRODUTO_2_COM_CARRINHO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Não é permitido excluir produto que faz parte de carrinho\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_2}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_2}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "8_DELETAR_USUARIO_COM_CARRINHO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Não é permitido excluir usuário com carrinho cadastrado\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios",
												"{{user_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "9_LER_CARRINHO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação PREÇO e QUANTIDADE\", function () {\r",
													"    var preco_1 = jsonResponse.produtos[0].precoUnitario\r",
													"    var qtd_1 = jsonResponse.produtos[0].quantidade\r",
													"    var preco_2 = jsonResponse.produtos[1].precoUnitario\r",
													"    var qtd_2 = jsonResponse.produtos[1].quantidade\r",
													"\r",
													"    pm.expect(preco_1).to.eq(100)\r",
													"    pm.expect(qtd_1).to.eq(1)\r",
													"    pm.expect(preco_2).to.eq(200)\r",
													"    pm.expect(qtd_2).to.eq(3)\r",
													"\r",
													"    var total_calculado = (preco_1*qtd_1) + (preco_2*qtd_2)\r",
													"    var total_qtd = qtd_1 + qtd_2\r",
													"\r",
													"    pm.expect(total_calculado).to.eq(jsonResponse.precoTotal)\r",
													"    pm.expect(total_qtd).to.eq(jsonResponse.quantidadeTotal)\r",
													"\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://serverest.dev/carrinhos/{{carrinho_id}}",
											"protocol": "https",
											"host": [
												"serverest",
												"dev"
											],
											"path": [
												"carrinhos",
												"{{carrinho_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "10_LEITURA_PRODUTO_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"Produto 1\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(100)\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"Produto 1 descrição\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(1)\r",
													"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"produto_id_1\"))\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_1}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "11_LEITURA_PRODUTO_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"Produto 2\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(200)\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"Produto 2 descrição\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(2)\r",
													"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"produto_id_2\"))\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_2}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_2}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "12_DELETAR_CARRINHO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validaçào mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{auth_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://serverest.dev/carrinhos/concluir-compra",
											"protocol": "https",
											"host": [
												"serverest",
												"dev"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"response": []
								},
								{
									"name": "13_LEITURA_PRODUTO_1_POS_COMPRA",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"Produto 1\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(100)\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"Produto 1 descrição\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(1)\r",
													"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"produto_id_1\"))\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_1}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "14_LEITURA_PRODUTO_2_POS_COMPRA",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem VALORES\", function () {\r",
													"    pm.expect(jsonResponse.nome).to.eq(\"Produto 2\")\r",
													"    pm.expect(jsonResponse.preco).to.eq(200)\r",
													"    pm.expect(jsonResponse.descricao).to.eq(\"Produto 2 descrição\")\r",
													"    pm.expect(jsonResponse.quantidade).to.eq(2)\r",
													"    pm.expect(jsonResponse._id).to.eq(pm.environment.get(\"produto_id_2\"))\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_2}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_2}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TEARDOWN",
							"item": [
								{
									"name": "15_DELETAR_PRODUTO_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_1}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "16_DELETAR_PRODUTO_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação Mensagem\", function () {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{auth_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/produtos/{{produto_id_2}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"produtos",
												"{{produto_id_2}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "17_DELETAR_USUARIO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonResponse = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 200\", ()=> {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem correta\", ()=> {\r",
													"    pm.expect(jsonResponse.message).to.eq(\"Registro excluído com sucesso\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/usuarios/{{user_id}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"usuarios",
												"{{user_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	]
}